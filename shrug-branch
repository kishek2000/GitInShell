#!/bin/dash

########################################################################
############################## SHRUG_RM ################################
########################################################################

## This file provides a way to remove files from the repo to different extents.
## The logic is:
## -> if a .shrug subdir exists, and files have been provided, then;
##      -> in the comments below, the cases are explained.
## -> otherwise, handle the errors.

if ! test -d ".shrug"; then
    >&2 echo "shrug-branch: error: no .shrug directory containing shrug repository exists"
    exit 1
fi 

branch=`cat ".shrug/branch.txt" | head -1`
commits=`cat ".shrug/branch.txt" | tail -1`

if test $commits -eq 0; then
    >&2 echo "shrug-branch: error: your repository does not have any commits yet"
    exit 1
fi

if test $# -eq 1 && test "$1" = "-d"; then
    >&2 echo "shrug-branch: error: branch name required"
    exit 1
fi

if test $# -ge 2; then
    if test $# -eq 2; then
        if test "$1" != "-d"; then
            >&2 echo "usage: shrug-branch [-d] <branch>"
            exit 1
        fi
    else
        >&2 echo "usage: shrug-branch [-d] <branch>"
        exit 1
    fi
fi

if test "$1" = "-d"; then
    test "$2" = "master" && >&2 echo "shrug-branch: error: can not delete branch '$2'" && exit 1
    test "$2" = "$branch" && >&2 echo "shrug-branch: error: you are currently in this branch. Move to another to delete it." && exit 1
    ! test -d ".shrug/.$2" && >&2 echo "shrug-branch: error: branch '$2' does not exist" && exit 1

    ## to delete a branch, we need to make sure there are no new changes present. If none, then we can recursively remove the
    ## entire sub directory.
    for file in .shrug/.$2/.files/*
    do
        filename=`basename $file`
        if test -f "$filename"; then
            difference=`diff "$filename" "$file" | wc -l`
            test $difference -gt 0 && >&2 echo "shrug-branch: error: branch '$2' has unmerged changes" && exit 1
        else
            >&2 echo "shrug-branch: error: branch '$2' has unmerged changes"
            exit 1
        fi
    done
    rm -r ".shrug/.$2" && echo "Deleted branch '$2'"
elif test "$#" = "1"; then
    test -d ".shrug/.$1" && >&2 echo "shrug-branch: error: branch '$1' already exists" && exit 1

    ## Overhere, we copy over all the necessary existing files into the new branch's .files subdir.
    existing_files=`ls | tr ' ' '\n'`
    ! test -d ".shrug/.$branch/.files" && mkdir ".shrug/.$branch/.files"
    for f in $existing_files
    do
        cp "$f" ".shrug/.$branch/.files"
    done
    
    ## Copy over all of the components now filtered in this branch, over to the new one and clean out the bin and
    ## status files.
    cp -r ".shrug/.$branch" ".shrug/.$1"
    test -f ".shrug/.$1/.merged/*.*" && rm ".shrug/.$1/.merged/*.*"
    printf "" > ".shrug/.$1/.log/bin.txt"
    printf "" > ".shrug/.$1/.log/status.txt"
else
    directories=`ls -d .shrug/.* | tr " " "\n" | egrep -v "\.$" | egrep -v "\.\.$" | sed 's/.shrug\///'`
    for dir in $directories
    do
        echo "$dir" | sed 's/\.//'
    done
fi
